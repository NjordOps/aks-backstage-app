apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: {{ .Values.namespace }}
data:
  app-config.yaml: |
    app:
      title: GitHub Actions with Helm Deployed Backstage
      baseUrl: {{ .Values.env.APP_CONFIG_app_baseUrl }}

    organization:
      name: GitHub Actions with Helm Deployed Backstage

    backend:
      baseUrl: {{ .Values.env.APP_CONFIG_backend_baseUrl }}
      listen:
        port: 7007
      csp:
        connect-src: ["'self'", 'http:', 'https:']
      cors:
        origin: {{ .Values.env.APP_CONFIG_app_baseUrl }}
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
        credentials: true
      database:
        client: pg
        connection:
          host: postgres.{{ .Values.namespace }}.svc.cluster.local
          port: 5432
          user: ${POSTGRES_USER}
          password: ${POSTGRES_PASSWORD}

    integrations:
      github:
        - host: github.com
          token: ${GITHUB_TOKEN}

    techdocs:
      builder: 'local'
      generator:
        runIn: 'docker'
      publisher:
        type: 'local'

    auth:
      providers:
        github:
          development:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
          signIn:
            resolvers:
              - resolver: usernameMatchingUserEntityName
          options:
            allowedOrganizations: {{ .Values.env.GITHUB_ALLOWED_ORGS }}

    catalog:
      import:
        entityFilename: catalog-info.yaml
        pullRequestBranchName: backstage-integration
      rules:
        - allow: [Component, System, API, Resource, Location]
      locations:
        - type: file
          target: ./examples/entities.yaml
        - type: file
          target: ./examples/template/template.yaml
          rules:
            - allow: [Template]
        - type: file
          target: ./examples/org.yaml
          rules:
            - allow: [User, Group]

    kubernetes:

    permission:
      enabled: true

