apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: http
      port: {{ .Values.service.port }}
      targetPort: 7007
  selector:
    app: backstage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: backend
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 7007
          volumeMounts:
            - name: app-config
              mountPath: /app/app-config.yaml
              subPath: app-config.yaml
          env:
            - name: NODE_ENV
              value: production
            - name: APP_CONFIG_app_baseUrl
              value: {{ .Values.env.APP_CONFIG_app_baseUrl | quote }}
            - name: APP_CONFIG_backend_baseUrl
              value: {{ .Values.env.APP_CONFIG_backend_baseUrl | quote }}
            - name: BACKEND_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.backendSecretName }}
                  key: BACKEND_SECRET
            - name: POSTGRES_HOST
              value: postgres.{{ .Values.namespace }}.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.userSecret }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.userSecret }}
                  key: POSTGRES_PASSWORD
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.githubSecretName }}
                  key: GITHUB_CLIENT_ID
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.githubSecretName }}
                  key: GITHUB_CLIENT_SECRET
            - name: GITHUB_ALLOWED_ORGS
              value: {{ .Values.env.GITHUB_ALLOWED_ORGS | quote }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.githubSecretName }}
                  key: GITHUB_TOKEN
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: app-config
          configMap:
            name: app-config
